/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>



#define DEFAULT 0
#define FIRST 1
#define SECOND 2
#define THIRD 3



/ {

        behaviors {
            mhp: behavior_mo_tap {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "hold-preferred";
                tapping-term-ms = <200>;
                bindings = <&mo>, <&kp>;
            };
        };

       combos {
            compatible = "zmk,combos";
            combo_lgui {
                timeout-ms = <50>;
                key-positions = <1 2>;
                bindings = <&kp LGUI>;
                layers = <0>;
            };
            combo_lctl {
                timeout-ms = <50>;
                key-positions = <11 12>;
                bindings = <&kp LCTRL>;
                layers = <0>;
            };
            combo_lalt {
                timeout-ms = <50>;
                key-positions = <21 22>;
                bindings = <&kp LALT>;
                layers = <0>;
            };
            combo_rgui {
                timeout-ms = <50>;
                key-positions = <7 8>;
                bindings = <&kp RGUI>;
                layers = <0>;
            };
            combo_rctrl {
                timeout-ms = <50>;
                key-positions = <17 18>;
                bindings = <&kp RCTRL>;
                layers = <0>;
            };
            combo_ratl {
                timeout-ms = <50>;
                key-positions = <27 28>;
                bindings = <&kp RALT>;
                layers = <0>;
            };
            combo_rnum {
                timeout-ms = <50>;
                key-positions = <8 9>;
                bindings = <&mo 2>;
                layers = <0>;
            };
            combo_lnum {
                timeout-ms = <50>;
                key-positions = <0 1>;
                bindings = <&mo 2>;
                slow-release;
                layers = <0>;
            };
        };

        keymap {
                compatible = "zmk,keymap";
		
                default_layer {
                	bindings = <

   &mhp 1 TAB    &kp W  &kp E  &kp R  &kp T           &kp Y   &kp U  &kp I    &kp O    &mhp 1 BSPC     
   &mhp 3 ESC  &kp S  &kp D  &kp F  &kp G           &kp H   &kp J  &kp K    &kp L    &mhp 3 RET  
   &kp Z      &kp X  &kp C  &kp V  &kp B           &kp N   &kp M  &kp A &kp P  &kp Q 
                            &mo 1  &kp LSHIFT      &kp SPACE      &mo 2 
                         >;
                };

                first_later {
                	bindings = <
   &kp BSPC   &mhp 2 AT  &kp HASH  &kp DLLR   &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR   &mhp 2 EXCL  &kp BSPC
   &kp LBRC   &kp LBKT   &kp LPAR  &kp LT     &kp COLON  &kp MINUS  &kp EQUAL &kp SQT    &kp DQT      &kp FSLH
   &kp GRAVE  &kp TILDE  &kp BSLH  &kp QMARK  &kp SEMI   &kp UNDER  &kp PLUS  &kp COMMA  &kp DOT      &kp PIPE
                            &none  &none  &none  &none 
                         >;
                };
                second_later {
                	bindings = <
   &trans    &none     &none     &none   &none   &none   &kp N7  &kp N8  &kp N9  &trans 
   &kp RBRC  &kp RBKT  &kp RPAR  &kp GT  &none   &none   &kp N4  &kp N5  &kp N6  &kp N0 
   &none     &none     &none     &none   &none   &none   &kp N1  &kp N2  &kp N3  &kp DOT
                            &none  &none  &none  &none 
                         >;
                };

                third_later {
                	bindings = <
   &none       &none        &none       &none        &none     &none     &none      &none      &none      &none   
   &none       &none        &none       &none        &none     &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &none  
   &sys_reset  &bootloader  &kp K_COPY  &kp K_PASTE  &trans    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &none  
                            &none       &none  &none &none 
                         >;
                };

        };
};



